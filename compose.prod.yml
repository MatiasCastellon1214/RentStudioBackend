version: '3.6'

services:
  app:
    container_name: rentstudio-api-prod
    image: rentstudio-api:latest
    build:
      context: .
      dockerfile: Dockerfile
    restart: "no"
    hostname: host-rentstudio-api-prod
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - env/prod/.prod.env
    ports:
      - "6060:8080"
    networks:
      - nginx_webnet

  postgres:
    image: postgres
    restart: always
    container_name: rentstudio-db-prod
    hostname: host-rentstudio-db
    env_file:
      - env/prod/.db.prod.env
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/log:/var/log/postgresql
    ports:
      - "6061:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - nginx_webnet

  cleaner:
    build:
      context: .
      dockerfile: Dockerfile.cleaner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - app

networks:
  nginx_webnet:
    external: true